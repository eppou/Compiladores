#include "libs.hpp"

bool final_states[13] = {false,true,true,true,true,true,true,true,true,false,true,true,true};

std::string tokens[13] = {"","ID","IF","ID","error","REAL","NUM","REAL","error","","comment","white space","error"};

int edges[13][128] = {
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11 /* Transição de 0 para 11 com ' ' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8 /* Transição de 0 para 8 com '-' */, 4 /* Transição de 0 para 4 com '.' */, -1, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, 6 /* Transição de 0 para 6 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 3 /* Transição de 0 para 3 com '[a-h]' */, 1 /* Transição de 0 para 1 com 'i' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, 3 /* Transição de 0 para 3 com '[j-z]' */, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, 3 /* Transição de 1 para 3 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 1 para 3 com '[a-e]' */, 3 /* Transição de 1 para 3 com '[a-e]' */, 3 /* Transição de 1 para 3 com '[a-e]' */, 3 /* Transição de 1 para 3 com '[a-e]' */, 3 /* Transição de 1 para 3 com '[a-e]' */, 2 /* Transição de 1 para 2 com 'f' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, 3 /* Transição de 1 para 3 com '[g-z]' */, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, 3 /* Transição de 2 para 3 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, 3 /* Transição de 2 para 3 com '[a-z]' */, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, 3 /* Transição de 3 para 3 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, 3 /* Transição de 3 para 3 com '[a-z]' */, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, 5 /* Transição de 4 para 5 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, 5 /* Transição de 5 para 5 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7 /* Transição de 6 para 7 com '.' */, -1, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, 6 /* Transição de 6 para 6 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, 7 /* Transição de 7 para 7 com '[0-9]' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9 /* Transição de 8 para 9 com '-' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10 /* Transição de 9 para 10 com '\n' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, 9 /* Transição de 9 para 9 com '[a-z]' */, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11 /* Transição de 11 para 11 com ' ' */, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
};